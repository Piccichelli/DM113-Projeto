//------------------------------------------------------------------------------
// <auto-generated>
//     Esse código foi gerado por uma ferramenta.
//
//     As alterações no arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsultaServiceSoap
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConsultaItem", Namespace="http://schemas.datacontract.org/2004/07/DM113_AtendimentoMedico.Model")]
    public partial class ConsultaItem : object
    {
        
        private ConsultaServiceSoap.ClienteModel ClienteField;
        
        private System.DateTime DataField;
        
        private int IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsultaServiceSoap.ClienteModel Cliente
        {
            get
            {
                return this.ClienteField;
            }
            set
            {
                this.ClienteField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Data
        {
            get
            {
                return this.DataField;
            }
            set
            {
                this.DataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClienteModel", Namespace="http://schemas.datacontract.org/2004/07/DM113_AtendimentoMedico.Model")]
    public partial class ClienteModel : object
    {
        
        private string EmailField;
        
        private string NomeField;
        
        private string TelefoneField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome
        {
            get
            {
                return this.NomeField;
            }
            set
            {
                this.NomeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telefone
        {
            get
            {
                return this.TelefoneField;
            }
            set
            {
                this.TelefoneField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ConsultaServiceSoap.IConsultaService")]
    public interface IConsultaService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultaService/GetConsultas", ReplyAction="http://tempuri.org/IConsultaService/GetConsultasResponse")]
        System.Threading.Tasks.Task<ConsultaServiceSoap.ConsultaItem[]> GetConsultasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultaService/GetConsultaPorId", ReplyAction="http://tempuri.org/IConsultaService/GetConsultaPorIdResponse")]
        System.Threading.Tasks.Task<ConsultaServiceSoap.ConsultaItem> GetConsultaPorIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultaService/CreateConsultaItem", ReplyAction="http://tempuri.org/IConsultaService/CreateConsultaItemResponse")]
        System.Threading.Tasks.Task CreateConsultaItemAsync(ConsultaServiceSoap.ConsultaItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultaService/UpdateConsultaItem", ReplyAction="http://tempuri.org/IConsultaService/UpdateConsultaItemResponse")]
        System.Threading.Tasks.Task UpdateConsultaItemAsync(ConsultaServiceSoap.ConsultaItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultaService/DeleteConsultaItem", ReplyAction="http://tempuri.org/IConsultaService/DeleteConsultaItemResponse")]
        System.Threading.Tasks.Task DeleteConsultaItemAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    public interface IConsultaServiceChannel : ConsultaServiceSoap.IConsultaService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    public partial class ConsultaServiceClient : System.ServiceModel.ClientBase<ConsultaServiceSoap.IConsultaService>, ConsultaServiceSoap.IConsultaService
    {
        
        /// <summary>
        /// Implemente este método parcial para configurar o ponto de extremidade de serviço.
        /// </summary>
        /// <param name="serviceEndpoint">O ponto de extremidade a ser configurado</param>
        /// <param name="clientCredentials">As credenciais do cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ConsultaServiceClient() : 
                base(ConsultaServiceClient.GetDefaultBinding(), ConsultaServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IConsultaService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ConsultaServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(ConsultaServiceClient.GetBindingForEndpoint(endpointConfiguration), ConsultaServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ConsultaServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ConsultaServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ConsultaServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ConsultaServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ConsultaServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<ConsultaServiceSoap.ConsultaItem[]> GetConsultasAsync()
        {
            return base.Channel.GetConsultasAsync();
        }
        
        public System.Threading.Tasks.Task<ConsultaServiceSoap.ConsultaItem> GetConsultaPorIdAsync(int id)
        {
            return base.Channel.GetConsultaPorIdAsync(id);
        }
        
        public System.Threading.Tasks.Task CreateConsultaItemAsync(ConsultaServiceSoap.ConsultaItem item)
        {
            return base.Channel.CreateConsultaItemAsync(item);
        }
        
        public System.Threading.Tasks.Task UpdateConsultaItemAsync(ConsultaServiceSoap.ConsultaItem item)
        {
            return base.Channel.UpdateConsultaItemAsync(item);
        }
        
        public System.Threading.Tasks.Task DeleteConsultaItemAsync(int id)
        {
            return base.Channel.DeleteConsultaItemAsync(id);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        #if !NET6_0_OR_GREATER
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        #endif
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IConsultaService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Não foi possível encontrar o ponto de extremidade com o nome \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IConsultaService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:5288/Service.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Não foi possível encontrar o ponto de extremidade com o nome \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ConsultaServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IConsultaService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ConsultaServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IConsultaService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IConsultaService,
        }
    }
}
